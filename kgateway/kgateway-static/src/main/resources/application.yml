spring:
  application:
    name: zuul-gateway-static
  cloud:
    gateway:
      routes:
        - id: test1
          uri: http://www.example.com/
          predicates:
            - Path=/abc/**
          filters:
            - AddRequestHeader=from,abc
        - id: pathInfo
          uri: http://www.example.com/
          predicates:
            - Path=/abcd/{segment}
        - id: queryInfo
          uri: http://www.example.com/
          predicates:
            - Query=foo,bb
        - id: methodnfo
          uri: http://www.example.com/
          predicates:
            - Method=DELETE
        - id: headinfo
          uri: http://www.example.com/
          predicates:
            - Header=x-ragnar-traceid,[\w\d]+
        - id: grayinfo
          uri: http://www.baidu.com/
          predicates:
            - Path=/eee/**
            - name: Gray
              args:
                grayStatus: true
        - id: lb-info
          uri: lb://consul-server-producer
          predicates:
            - Path=/info/**
          filters:
            - RemoveRequestHeader=from2
            - AddRequestHeader=from,abc
            - name: Retry
              args:
                retries: 2
                series: SERVER_ERROR
            - name: Login
              args:
                checkLogin: true
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 2
                key-resolver: "#{@apiKeyResolver}"
        - id: statusFilter
          uri: http://www.example.com/
          predicates:
            - Query=foo,b1
          filters:
            - SetStatus=401
        - id: redictFilter
          uri: http://www.example.com/
          predicates:
            - Query=foo,b2
          filters:
            - RedirectTo=302,http://weibo.com
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
    consul:
      discovery:
        service-name: zuul-gateway-static
        health-check-path: /health/status
        prefer-ip-address: true
        ip-address: 127.0.0.1
      host: localhost
      port: 8500
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    connect-timeout: 100ms
    timeout: 500ms
    jedis:
      pool:
        max-active: 200
        min-idle: 10
        max-idle: 20
        max-wait: 10000ms

server:
  port: 10011
  address: 127.0.0.1
debug: true
management:
    endpoint:
      gateway:
        enabled: true
    endpoints:
      web:
        exposure:
          include: "*"
logging:
  config: classpath:logback-spring.xml



#eureka.instance.ip-address=127.0.0.1
#eureka.client.serviceUrl.defaultZone=http://tom:123456@localhost:9010/eureka/
#eureka.instance.preferIpAddress=true
#eureka.instance.instance-id=${spring.application.name}:${server.address}:${server.port}
#eureka.client.healthcheck.enabled=true
#eureka.instance.lease-expiration-duration-in-seconds=20
#eureka.instance.lease-renewal-interval-in-seconds=15





